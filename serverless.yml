# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: ${file(package.json):name}

provider:
  name: aws
  runtime: nodejs6.10
  region: us-east-1
  stage: development

package:
  individually: true

plugins:
  - serverless-plugin-scripts
  - serverless-plugin-simulate
  - serverless-pseudo-parameters
  - serverless-prune-plugin
  - serverless-offline

custom:
  stage: "${opt:stage, self:provider.stage}" # this way we always have a stage
  name: "${self:custom.stage}-${self:service}"
  scripts:
    hooks:
      "deploy:createDeploymentArtifacts": npm run package
  prune:
    automatic: true
    number: 25

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  meta:
    handler: api/meta/index.handler
    package:
      artifact: api/meta/meta.zip

    events:
      # an example HTTP event
      - http:
          path: status
          method: GET

  database:
    handler: api/database/index.handler
    package:
      artifact: api/database/database.zip

    events:
      # an example HTTP event
      - http:
          path: database/{proxy+}
          method: ANY

  proxy:
    handler: api/proxy/index.handler
    package:
      artifact: api/proxy/proxy.zip

    events:
      - http:
          path: proxy/{proxy+}
          method: ANY

#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Resources:
    tlauvTable: 
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions: 
          - AttributeName: "Path"
            AttributeType: "S"
          - AttributeName: "Key"
            AttributeType: "S"
        KeySchema: 
          - AttributeName: "Path"
            KeyType: "HASH"
          - AttributeName: "Key"
            KeyType: "RANGE"          
    tlauvDatabaseLambdaRole: ${file(api/database/resources.yaml):tlauvDatabaseLambdaRole}
